{"ast":null,"code":"import { is_nil } from './index.js';\nfunction make_array(arr) {\n  if (is_nil(arr)) return [];\n  return Array.isArray(arr) ? arr : [arr];\n}\nfunction join(arr) {\n  let spliter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '\\n';\n  return (arr || []).join(spliter);\n}\nfunction last(arr) {\n  let n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (is_nil(arr)) return '';\n  return arr[arr.length - n];\n}\nfunction first(arr) {\n  return arr[0];\n}\nfunction clone(arr) {\n  if (typeof structuredClone !== 'undefined') {\n    return structuredClone(arr);\n  }\n  return JSON.parse(JSON.stringify(arr));\n}\nfunction duplicate(arr) {\n  return [].concat(arr, arr);\n}\nfunction flat_map(arr, fn) {\n  if (Array.prototype.flatMap) return arr.flatMap(fn);\n  return arr.reduce((acc, x) => acc.concat(fn(x)), []);\n}\nfunction remove_empty_values(arr) {\n  return arr.filter(v => !is_nil(v) && String(v).trim().length);\n}\nexport { make_array, join, last, first, clone, duplicate, flat_map, remove_empty_values };","map":{"version":3,"names":["is_nil","make_array","arr","Array","isArray","join","spliter","last","n","length","first","clone","structuredClone","JSON","parse","stringify","duplicate","concat","flat_map","fn","prototype","flatMap","reduce","acc","x","remove_empty_values","filter","v","String","trim"],"sources":["/Users/mariaeduardatc/Documents/GitHub/website/node_modules/css-doodle/src/utils/list.js"],"sourcesContent":["import { is_nil } from './index.js';\n\nfunction make_array(arr) {\n  if (is_nil(arr)) return [];\n  return Array.isArray(arr) ? arr : [arr];\n}\n\nfunction join(arr, spliter = '\\n') {\n  return (arr || []).join(spliter);\n}\n\nfunction last(arr, n = 1) {\n  if (is_nil(arr)) return '';\n  return arr[arr.length - n];\n}\n\nfunction first(arr) {\n  return arr[0];\n}\n\nfunction clone(arr) {\n  if (typeof structuredClone !== 'undefined') {\n    return structuredClone(arr);\n  }\n  return JSON.parse(JSON.stringify(arr));\n}\n\nfunction duplicate(arr) {\n  return [].concat(arr, arr);\n}\n\nfunction flat_map(arr, fn) {\n  if (Array.prototype.flatMap) return arr.flatMap(fn);\n  return arr.reduce((acc, x) => acc.concat(fn(x)), []);\n}\n\nfunction remove_empty_values(arr) {\n  return arr.filter(v => (\n    !is_nil(v) && String(v).trim().length\n  ));\n}\n\nexport {\n  make_array,\n  join,\n  last,\n  first,\n  clone,\n  duplicate,\n  flat_map,\n  remove_empty_values,\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,YAAY;AAEnC,SAASC,UAAU,CAACC,GAAG,EAAE;EACvB,IAAIF,MAAM,CAACE,GAAG,CAAC,EAAE,OAAO,EAAE;EAC1B,OAAOC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,GAAGA,GAAG,GAAG,CAACA,GAAG,CAAC;AACzC;AAEA,SAASG,IAAI,CAACH,GAAG,EAAkB;EAAA,IAAhBI,OAAO,uEAAG,IAAI;EAC/B,OAAO,CAACJ,GAAG,IAAI,EAAE,EAAEG,IAAI,CAACC,OAAO,CAAC;AAClC;AAEA,SAASC,IAAI,CAACL,GAAG,EAAS;EAAA,IAAPM,CAAC,uEAAG,CAAC;EACtB,IAAIR,MAAM,CAACE,GAAG,CAAC,EAAE,OAAO,EAAE;EAC1B,OAAOA,GAAG,CAACA,GAAG,CAACO,MAAM,GAAGD,CAAC,CAAC;AAC5B;AAEA,SAASE,KAAK,CAACR,GAAG,EAAE;EAClB,OAAOA,GAAG,CAAC,CAAC,CAAC;AACf;AAEA,SAASS,KAAK,CAACT,GAAG,EAAE;EAClB,IAAI,OAAOU,eAAe,KAAK,WAAW,EAAE;IAC1C,OAAOA,eAAe,CAACV,GAAG,CAAC;EAC7B;EACA,OAAOW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACb,GAAG,CAAC,CAAC;AACxC;AAEA,SAASc,SAAS,CAACd,GAAG,EAAE;EACtB,OAAO,EAAE,CAACe,MAAM,CAACf,GAAG,EAAEA,GAAG,CAAC;AAC5B;AAEA,SAASgB,QAAQ,CAAChB,GAAG,EAAEiB,EAAE,EAAE;EACzB,IAAIhB,KAAK,CAACiB,SAAS,CAACC,OAAO,EAAE,OAAOnB,GAAG,CAACmB,OAAO,CAACF,EAAE,CAAC;EACnD,OAAOjB,GAAG,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAKD,GAAG,CAACN,MAAM,CAACE,EAAE,CAACK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AACtD;AAEA,SAASC,mBAAmB,CAACvB,GAAG,EAAE;EAChC,OAAOA,GAAG,CAACwB,MAAM,CAACC,CAAC,IACjB,CAAC3B,MAAM,CAAC2B,CAAC,CAAC,IAAIC,MAAM,CAACD,CAAC,CAAC,CAACE,IAAI,EAAE,CAACpB,MAChC,CAAC;AACJ;AAEA,SACER,UAAU,EACVI,IAAI,EACJE,IAAI,EACJG,KAAK,EACLC,KAAK,EACLK,SAAS,EACTE,QAAQ,EACRO,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { scan, iterator } from './tokenizer.js';\nfunction parse(input) {\n  let iter = iterator(scan(input));\n  let commands = {};\n  let tokens = [];\n  let name;\n  let negative = false;\n  while (iter.next()) {\n    let {\n      prev,\n      curr,\n      next\n    } = iter.get();\n    if (curr.isSymbol(':') && !name) {\n      name = joinTokens(tokens);\n      tokens = [];\n    } else if (curr.isSymbol(';') && name) {\n      commands[name] = transformNegative(name, joinTokens(tokens), negative);\n      tokens = [];\n      name = null;\n      negative = false;\n    } else if (!curr.isSymbol(';')) {\n      let prevMinus = prev && prev.isSymbol('-');\n      let nextMinus = next && next.isSymbol('-');\n      let currMinus = curr.isSymbol('-');\n      if (!name && !tokens.length && currMinus && !prevMinus && !nextMinus) {\n        if (next && next.isSymbol(':')) {\n          tokens.push(curr);\n        } else {\n          negative = true;\n        }\n      } else {\n        tokens.push(curr);\n      }\n    }\n  }\n  if (tokens.length && name) {\n    commands[name] = transformNegative(name, joinTokens(tokens), negative);\n  }\n  return commands;\n}\nfunction transformNegative(name, value, negative) {\n  let excludes = ['fill-rule', 'fill'];\n  if (excludes.includes(name)) {\n    return value;\n  }\n  return negative ? `-1 * (${value})` : value;\n}\nfunction joinTokens(tokens) {\n  return tokens.map(n => n.value).join('');\n}\nexport default parse;","map":{"version":3,"names":["scan","iterator","parse","input","iter","commands","tokens","name","negative","next","prev","curr","get","isSymbol","joinTokens","transformNegative","prevMinus","nextMinus","currMinus","length","push","value","excludes","includes","map","n","join"],"sources":["/Users/mariaeduardatc/Documents/GitHub/website/node_modules/css-doodle/src/parser/parse-shape-commands.js"],"sourcesContent":["import { scan, iterator } from './tokenizer.js';\n\nfunction parse(input) {\n  let iter = iterator(scan(input));\n  let commands = {};\n  let tokens = [];\n  let name;\n  let negative = false;\n  while (iter.next()) {\n    let { prev, curr, next } = iter.get();\n    if (curr.isSymbol(':') && !name) {\n      name = joinTokens(tokens);\n      tokens = [];\n    } else if (curr.isSymbol(';') && name) {\n      commands[name] = transformNegative(name, joinTokens(tokens), negative);\n      tokens = [];\n      name = null;\n      negative = false;\n    } else if (!curr.isSymbol(';')) {\n      let prevMinus = prev && prev.isSymbol('-');\n      let nextMinus = next && next.isSymbol('-');\n      let currMinus = curr.isSymbol('-');\n      if (!name && !tokens.length && currMinus && !prevMinus && !nextMinus) {\n        if (next && next.isSymbol(':')) {\n          tokens.push(curr);\n        } else {\n          negative = true;\n        }\n      } else {\n        tokens.push(curr);\n      }\n    }\n  }\n  if (tokens.length && name) {\n    commands[name] = transformNegative(name, joinTokens(tokens), negative);\n  }\n  return commands;\n}\n\nfunction transformNegative(name, value, negative) {\n  let excludes = ['fill-rule', 'fill'];\n  if (excludes.includes(name)) {\n    return value;\n  }\n  return negative ? `-1 * (${ value })` : value;\n}\n\nfunction joinTokens(tokens) {\n  return tokens.map(n => n.value).join('');\n}\n\nexport default parse;\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,gBAAgB;AAE/C,SAASC,KAAK,CAACC,KAAK,EAAE;EACpB,IAAIC,IAAI,GAAGH,QAAQ,CAACD,IAAI,CAACG,KAAK,CAAC,CAAC;EAChC,IAAIE,QAAQ,GAAG,CAAC,CAAC;EACjB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,IAAI;EACR,IAAIC,QAAQ,GAAG,KAAK;EACpB,OAAOJ,IAAI,CAACK,IAAI,EAAE,EAAE;IAClB,IAAI;MAAEC,IAAI;MAAEC,IAAI;MAAEF;IAAK,CAAC,GAAGL,IAAI,CAACQ,GAAG,EAAE;IACrC,IAAID,IAAI,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAI,CAACN,IAAI,EAAE;MAC/BA,IAAI,GAAGO,UAAU,CAACR,MAAM,CAAC;MACzBA,MAAM,GAAG,EAAE;IACb,CAAC,MAAM,IAAIK,IAAI,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAIN,IAAI,EAAE;MACrCF,QAAQ,CAACE,IAAI,CAAC,GAAGQ,iBAAiB,CAACR,IAAI,EAAEO,UAAU,CAACR,MAAM,CAAC,EAAEE,QAAQ,CAAC;MACtEF,MAAM,GAAG,EAAE;MACXC,IAAI,GAAG,IAAI;MACXC,QAAQ,GAAG,KAAK;IAClB,CAAC,MAAM,IAAI,CAACG,IAAI,CAACE,QAAQ,CAAC,GAAG,CAAC,EAAE;MAC9B,IAAIG,SAAS,GAAGN,IAAI,IAAIA,IAAI,CAACG,QAAQ,CAAC,GAAG,CAAC;MAC1C,IAAII,SAAS,GAAGR,IAAI,IAAIA,IAAI,CAACI,QAAQ,CAAC,GAAG,CAAC;MAC1C,IAAIK,SAAS,GAAGP,IAAI,CAACE,QAAQ,CAAC,GAAG,CAAC;MAClC,IAAI,CAACN,IAAI,IAAI,CAACD,MAAM,CAACa,MAAM,IAAID,SAAS,IAAI,CAACF,SAAS,IAAI,CAACC,SAAS,EAAE;QACpE,IAAIR,IAAI,IAAIA,IAAI,CAACI,QAAQ,CAAC,GAAG,CAAC,EAAE;UAC9BP,MAAM,CAACc,IAAI,CAACT,IAAI,CAAC;QACnB,CAAC,MAAM;UACLH,QAAQ,GAAG,IAAI;QACjB;MACF,CAAC,MAAM;QACLF,MAAM,CAACc,IAAI,CAACT,IAAI,CAAC;MACnB;IACF;EACF;EACA,IAAIL,MAAM,CAACa,MAAM,IAAIZ,IAAI,EAAE;IACzBF,QAAQ,CAACE,IAAI,CAAC,GAAGQ,iBAAiB,CAACR,IAAI,EAAEO,UAAU,CAACR,MAAM,CAAC,EAAEE,QAAQ,CAAC;EACxE;EACA,OAAOH,QAAQ;AACjB;AAEA,SAASU,iBAAiB,CAACR,IAAI,EAAEc,KAAK,EAAEb,QAAQ,EAAE;EAChD,IAAIc,QAAQ,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC;EACpC,IAAIA,QAAQ,CAACC,QAAQ,CAAChB,IAAI,CAAC,EAAE;IAC3B,OAAOc,KAAK;EACd;EACA,OAAOb,QAAQ,GAAI,SAASa,KAAO,GAAE,GAAGA,KAAK;AAC/C;AAEA,SAASP,UAAU,CAACR,MAAM,EAAE;EAC1B,OAAOA,MAAM,CAACkB,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACJ,KAAK,CAAC,CAACK,IAAI,CAAC,EAAE,CAAC;AAC1C;AAEA,eAAexB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
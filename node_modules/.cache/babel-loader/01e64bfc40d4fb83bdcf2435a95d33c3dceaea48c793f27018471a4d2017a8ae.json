{"ast":null,"code":"import calc from './calc.js';\nconst literal = {\n  even: n => !(n % 2),\n  odd: n => !!(n % 2)\n};\n\n/**\n * TODO: optimization\n */\nfunction nth(input, curr, max) {\n  for (let i = 0; i <= max; ++i) {\n    if (calc(input, {\n      n: i\n    }) == curr) {\n      return true;\n    }\n  }\n}\nfunction get_selector(offset) {\n  let selector = '';\n  if (offset == 0) {\n    selector = '$:hover';\n  } else if (offset > 0) {\n    selector = `$:hover ${'+*'.repeat(offset)}`;\n  } else {\n    selector = `:has(+ ${'*+'.repeat(Math.abs(offset + 1))} $:hover)`;\n  }\n  return selector;\n}\nexport default {\n  at(_ref) {\n    let {\n      x,\n      y\n    } = _ref;\n    return (x1, y1) => x == x1 && y == y1;\n  },\n  nth(_ref2) {\n    let {\n      count,\n      grid\n    } = _ref2;\n    return function () {\n      for (var _len = arguments.length, exprs = new Array(_len), _key = 0; _key < _len; _key++) {\n        exprs[_key] = arguments[_key];\n      }\n      return exprs.some(expr => literal[expr] ? literal[expr](count) : nth(expr, count, grid.count));\n    };\n  },\n  row(_ref3) {\n    let {\n      y,\n      grid\n    } = _ref3;\n    return function () {\n      for (var _len2 = arguments.length, exprs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        exprs[_key2] = arguments[_key2];\n      }\n      return exprs.some(expr => literal[expr] ? literal[expr](y) : nth(expr, y, grid.y));\n    };\n  },\n  col(_ref4) {\n    let {\n      x,\n      grid\n    } = _ref4;\n    return function () {\n      for (var _len3 = arguments.length, exprs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        exprs[_key3] = arguments[_key3];\n      }\n      return exprs.some(expr => literal[expr] ? literal[expr](x) : nth(expr, x, grid.x));\n    };\n  },\n  even(_ref5) {\n    let {\n      count,\n      grid,\n      x,\n      y\n    } = _ref5;\n    return arg => literal.odd(x + y);\n  },\n  odd(_ref6) {\n    let {\n      count,\n      grid,\n      x,\n      y\n    } = _ref6;\n    return arg => literal.even(x + y);\n  },\n  random(_ref7) {\n    let {\n      random,\n      count,\n      x,\n      y,\n      grid\n    } = _ref7;\n    return function () {\n      let ratio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : .5;\n      if (/\\D/.test(ratio)) {\n        return random() < calc('(' + ratio + ')', {\n          x,\n          X: grid.x,\n          y,\n          Y: grid.y,\n          i: count,\n          I: grid.count,\n          random\n        });\n      }\n      return random() < ratio;\n    };\n  },\n  match(_ref8) {\n    let {\n      count,\n      grid,\n      x,\n      y,\n      random\n    } = _ref8;\n    return expr => {\n      return !!calc('(' + expr + ')', {\n        x,\n        X: grid.x,\n        y,\n        Y: grid.y,\n        i: count,\n        I: grid.count,\n        random\n      });\n    };\n  },\n  hover(_ref9) {\n    let {\n      count,\n      x,\n      y,\n      grid,\n      random\n    } = _ref9;\n    return function () {\n      let selectors = [];\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n      if (!args.length) {\n        selectors.push(get_selector(0));\n      }\n      for (let arg of args) {\n        let [dx, dy] = String(arg).split(/\\s+/);\n        dx = Number(dx);\n        dy = Number(dy);\n        // @hover(1, 2, 3)\n        if (Number.isNaN(dy) && !Number.isNaN(dx)) {\n          selectors.push(get_selector(dx));\n        }\n        // @hover(1 -1, 0 1)\n        if (!Number.isNaN(dx) && !Number.isNaN(dy)) {\n          let rx = dx + x;\n          let ry = dy + y;\n          if (rx >= 1 && rx <= grid.x && ry >= 1 && ry <= grid.y) {\n            let offset = dy * grid.y + dx;\n            selectors.push(get_selector(offset));\n          }\n        }\n      }\n      if (!selectors.length) {\n        return false;\n      }\n      return {\n        selector: selectors.join(',')\n      };\n    };\n  }\n};","map":{"version":3,"names":["calc","literal","even","n","odd","nth","input","curr","max","i","get_selector","offset","selector","repeat","Math","abs","at","x","y","x1","y1","count","grid","exprs","some","expr","row","col","arg","random","ratio","test","X","Y","I","match","hover","selectors","args","length","push","dx","dy","String","split","Number","isNaN","rx","ry","join"],"sources":["/Users/mariaeduardatc/Documents/GitHub/website/node_modules/css-doodle/src/selector.js"],"sourcesContent":["import calc from './calc.js';\n\nconst literal = {\n  even: n => !(n % 2),\n  odd:  n => !!(n % 2),\n};\n\n/**\n * TODO: optimization\n */\nfunction nth(input, curr, max) {\n  for (let i = 0; i <= max; ++i) {\n    if (calc(input, { n: i }) == curr) {\n      return true;\n    }\n  }\n}\n\nfunction get_selector(offset) {\n  let selector = '';\n  if (offset == 0) {\n    selector = '$:hover';\n  }\n  else if (offset > 0) {\n    selector = `$:hover ${'+*'.repeat(offset)}`;\n  }\n  else {\n    selector = `:has(+ ${'*+'.repeat(Math.abs(offset + 1))} $:hover)`;\n  }\n  return selector;\n}\n\nexport default {\n\n  at({ x, y }) {\n    return (x1, y1) => (x == x1 && y == y1);\n  },\n\n  nth({ count, grid }) {\n    return (...exprs) => exprs.some(expr =>\n      literal[expr]\n        ? literal[expr](count)\n        : nth(expr, count, grid.count)\n    );\n  },\n\n  row({ y, grid }) {\n    return (...exprs) => exprs.some(expr =>\n      literal[expr]\n        ? literal[expr](y)\n        : nth(expr, y, grid.y)\n    );\n  },\n\n  col({ x, grid }) {\n    return (...exprs) => exprs.some(expr =>\n      literal[expr]\n        ? literal[expr](x)\n        : nth(expr, x, grid.x)\n    );\n  },\n\n  even({ count, grid, x, y }) {\n    return arg => literal.odd(x + y);\n  },\n\n  odd({ count, grid, x, y}) {\n    return arg => literal.even(x + y);\n  },\n\n  random({ random, count, x, y, grid }) {\n    return (ratio = .5) => {\n      if (/\\D/.test(ratio)) {\n        return random() < calc('(' + ratio + ')', {\n          x, X: grid.x,\n          y, Y: grid.y,\n          i: count, I: grid.count,\n          random,\n        });\n      }\n      return random() < ratio;\n    }\n  },\n\n  match({ count, grid, x, y, random }) {\n    return expr => {\n      return !!calc('(' + expr + ')', {\n        x, X: grid.x,\n        y, Y: grid.y,\n        i: count, I: grid.count,\n        random,\n      });\n    }\n  },\n\n  hover({ count, x, y, grid, random }) {\n    return (...args) => {\n      let selectors = [];\n      if (!args.length) {\n        selectors.push(get_selector(0));\n      }\n      for (let arg of args) {\n        let [dx, dy] = String(arg).split(/\\s+/);\n        dx = Number(dx);\n        dy = Number(dy);\n        // @hover(1, 2, 3)\n        if (Number.isNaN(dy) && !Number.isNaN(dx)) {\n          selectors.push(get_selector(dx));\n        }\n        // @hover(1 -1, 0 1)\n        if (!Number.isNaN(dx) && !Number.isNaN(dy)) {\n          let rx = dx + x;\n          let ry = dy + y;\n          if (rx >= 1 && rx <= grid.x && ry >= 1 && ry <= grid.y) {\n            let offset = (dy * grid.y) + dx;\n            selectors.push(get_selector(offset));\n          }\n        }\n      }\n      if (!selectors.length) {\n        return false;\n      }\n      return {\n        selector: selectors.join(',')\n      }\n    }\n  },\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}